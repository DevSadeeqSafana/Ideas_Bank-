{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/ideas_bank/src/lib/db.js"],"sourcesContent":["import mysql from 'mysql2/promise';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst pool = mysql.createPool({\n  host: process.env.DB_HOST || '127.0.0.1',\n  user: process.env.DB_USER || 'exam_user',\n  password: process.env.DB_PASSWORD || 'exam_password',\n  port: parseInt(process.env.DB_PORT, 10) || 3307,\n  database: process.env.DB_NAME || 'ideas_bank',\n  waitForConnections: true,\n  connectionLimit: 10,\n  queueLimit: 0\n});\n\n(async () => {\n  try {\n    const connection = await pool.getConnection();\n    console.log(`✅ Connected to ${process.env.DB_NAME || 'ideas_bank'} database`);\n    connection.release();\n  } catch (err) {\n    console.error('❌ Database connection failed:', err.message);\n  }\n})();\n\nexport default pool;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,uIAAA,CAAA,UAAM,CAAC,MAAM;AAEb,MAAM,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;IAC5B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,UAAU,QAAQ,GAAG,CAAC,WAAW,IAAI;IACrC,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO,EAAE,OAAO;IAC3C,UAAU,QAAQ,GAAG,CAAC,OAAO,IAAI;IACjC,oBAAoB;IACpB,iBAAiB;IACjB,YAAY;AACd;AAEA,CAAC;IACC,IAAI;QACF,MAAM,aAAa,MAAM,KAAK,aAAa;QAC3C,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,QAAQ,GAAG,CAAC,OAAO,IAAI,aAAa,SAAS,CAAC;QAC5E,WAAW,OAAO;IACpB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,iCAAiC,IAAI,OAAO;IAC5D;AACF,CAAC;uCAEc","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/ideas_bank/src/app/api/internship/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport pool from '@/lib/db';\n\nexport async function POST(request) {\n  try {\n    const formData = await request.formData();\n    \n    const has_started_internship = formData.get('has_started_internship') === 'true';\n    const has_completed_internship = formData.get('has_completed_internship') === 'true';\n    const state_of_internship = formData.get('state_of_internship');\n    const LGA_of_internship = formData.get('LGA_of_internship');\n    const traineeId = formData.get('traineeId');\n    \n    const acceptanceFile = formData.get('acceptancePhoto');\n    const completionFile = formData.get('completionPhoto');\n    \n    let internship_letter_url = formData.get('acceptancePhoto') || '';\n    let completion_letter_url =formData.get('completionPhoto') || '';\n    \n    if (!traineeId) {\n      return NextResponse.json({ error: 'Trainee ID is required' }, { status: 400 });\n    }\n    \n    // Update internship details in the trainees table\n    const result = await pool.query(\n      `UPDATE trainees SET \n      has_started_internship = ?, \n      internship_letter_url = ?, \n      has_completed_internship = ?, \n      completion_letter_url = ?,\n      state_of_internship = ?,\n      LGA_of_internship = ?\n      WHERE id = ?`,\n      [\n        has_started_internship ? 1 : 0, \n        internship_letter_url, \n        has_completed_internship ? 1 : 0, \n        completion_letter_url,\n        state_of_internship,\n        LGA_of_internship,\n        traineeId\n      ]\n    );\n\n    console.log('Update result:', result);\n\n    if (result[0].affectedRows === 0) {\n      return NextResponse.json({ error: 'Trainee not found' }, { status: 404 });\n    }\n    \n    return NextResponse.json({ message: 'Internship information saved successfully' }, { status: 200 });\n    \n  } catch (error) {\n    console.error('Internship API error:', error);\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\n  }\n}\n\nexport async function GET(request) {\n  try {\n    const { searchParams } = new URL(request.url);\n    const traineeId = searchParams.get('traineeId');\n    \n    if (!traineeId) {\n      return NextResponse.json({ error: 'Trainee ID is required' }, { status: 400 });\n    }\n    \n    const [trainee] = await pool.query(\n      'SELECT has_started_internship, internship_letter_url, has_completed_internship, completion_letter_url FROM trainees WHERE id = ?',\n      [traineeId]\n    );\n    \n    if (trainee.length === 0) {\n      return NextResponse.json({ error: 'Trainee not found' }, { status: 404 });\n    }\n    \n    return NextResponse.json({\n      has_started_internship: trainee[0].has_started_internship === 1,\n      internship_letter_url: trainee[0].internship_letter_url || '',\n      has_completed_internship: trainee[0].has_completed_internship === 1,\n      completion_letter_url: trainee[0].completion_letter_url || ''\n    });\n    \n  } catch (error) {\n    console.error('Get internship error:', error);\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\n  }\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,WAAW,MAAM,QAAQ,QAAQ;QAEvC,MAAM,yBAAyB,SAAS,GAAG,CAAC,8BAA8B;QAC1E,MAAM,2BAA2B,SAAS,GAAG,CAAC,gCAAgC;QAC9E,MAAM,sBAAsB,SAAS,GAAG,CAAC;QACzC,MAAM,oBAAoB,SAAS,GAAG,CAAC;QACvC,MAAM,YAAY,SAAS,GAAG,CAAC;QAE/B,MAAM,iBAAiB,SAAS,GAAG,CAAC;QACpC,MAAM,iBAAiB,SAAS,GAAG,CAAC;QAEpC,IAAI,wBAAwB,SAAS,GAAG,CAAC,sBAAsB;QAC/D,IAAI,wBAAuB,SAAS,GAAG,CAAC,sBAAsB;QAE9D,IAAI,CAAC,WAAW;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAyB,GAAG;gBAAE,QAAQ;YAAI;QAC9E;QAEA,kDAAkD;QAClD,MAAM,SAAS,MAAM,kHAAA,CAAA,UAAI,CAAC,KAAK,CAC7B,CAAC;;;;;;;kBAOW,CAAC,EACb;YACE,yBAAyB,IAAI;YAC7B;YACA,2BAA2B,IAAI;YAC/B;YACA;YACA;YACA;SACD;QAGH,QAAQ,GAAG,CAAC,kBAAkB;QAE9B,IAAI,MAAM,CAAC,EAAE,CAAC,YAAY,KAAK,GAAG;YAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QACzE;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAA4C,GAAG;YAAE,QAAQ;QAAI;IAEnG,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF;AAEO,eAAe,IAAI,OAAO;IAC/B,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;QAC5C,MAAM,YAAY,aAAa,GAAG,CAAC;QAEnC,IAAI,CAAC,WAAW;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAyB,GAAG;gBAAE,QAAQ;YAAI;QAC9E;QAEA,MAAM,CAAC,QAAQ,GAAG,MAAM,kHAAA,CAAA,UAAI,CAAC,KAAK,CAChC,oIACA;YAAC;SAAU;QAGb,IAAI,QAAQ,MAAM,KAAK,GAAG;YACxB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QACzE;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,wBAAwB,OAAO,CAAC,EAAE,CAAC,sBAAsB,KAAK;YAC9D,uBAAuB,OAAO,CAAC,EAAE,CAAC,qBAAqB,IAAI;YAC3D,0BAA0B,OAAO,CAAC,EAAE,CAAC,wBAAwB,KAAK;YAClE,uBAAuB,OAAO,CAAC,EAAE,CAAC,qBAAqB,IAAI;QAC7D;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}