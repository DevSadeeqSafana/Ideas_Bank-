{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/ideas_bank/src/lib/db.js"],"sourcesContent":["import mysql from 'mysql2/promise';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst pool = mysql.createPool({\n  host: process.env.DB_HOST || '127.0.0.1',\n  user: process.env.DB_USER || 'exam_user',\n  password: process.env.DB_PASSWORD || 'exam_password',\n  port: parseInt(process.env.DB_PORT, 10) || 3307,\n  database: process.env.DB_NAME || 'ideas_bank',\n  waitForConnections: true,\n  connectionLimit: 10,\n  queueLimit: 0\n});\n\n(async () => {\n  try {\n    const connection = await pool.getConnection();\n    console.log(`✅ Connected to ${process.env.DB_NAME || 'ideas_bank'} database`);\n    connection.release();\n  } catch (err) {\n    console.error('❌ Database connection failed:', err.message);\n  }\n})();\n\nexport default pool;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,uIAAA,CAAA,UAAM,CAAC,MAAM;AAEb,MAAM,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;IAC5B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,UAAU,QAAQ,GAAG,CAAC,WAAW,IAAI;IACrC,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO,EAAE,OAAO;IAC3C,UAAU,QAAQ,GAAG,CAAC,OAAO,IAAI;IACjC,oBAAoB;IACpB,iBAAiB;IACjB,YAAY;AACd;AAEA,CAAC;IACC,IAAI;QACF,MAAM,aAAa,MAAM,KAAK,aAAa;QAC3C,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,QAAQ,GAAG,CAAC,OAAO,IAAI,aAAa,SAAS,CAAC;QAC5E,WAAW,OAAO;IACpB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,iCAAiC,IAAI,OAAO;IAC5D;AACF,CAAC;uCAEc","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/ideas_bank/src/app/api/trainee/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport pool from '@/lib/db';\r\n\r\nexport async function POST(request, { params }) {\r\n\r\n  try {\r\n\r\n\r\n    const data = await request.json();\r\n\r\n    const connection = await pool.getConnection();\r\n    \r\n    try {\r\n      await connection.beginTransaction();\r\n\r\n     \r\n      // Update bank info\r\n      await connection.query(\r\n        `UPDATE trainees SET \r\n        bank_name = ?, account_number = ?, account_name = ?, bvn = ?\r\n        WHERE id = ?`,\r\n        [\r\n          data.bank_name, data.account_number, data.account_name, data.bvn,\r\n          data.traineeId\r\n        ]\r\n      );\r\n\r\n     \r\n      await connection.commit();\r\n\r\n      return NextResponse.json(\r\n        { message: 'Trainee updated successfully' },\r\n        { status: 200 }\r\n      );\r\n\r\n    } catch (error) {\r\n      await connection.rollback();\r\n      throw error;\r\n    } finally {\r\n      connection.release();\r\n    }\r\n\r\n  } catch (error) {\r\n    console.error('Update trainee error:', error);\r\n    return NextResponse.json(\r\n      { error: 'Internal server error' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAO,EAAE,EAAE,MAAM,EAAE;IAE5C,IAAI;QAGF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,MAAM,aAAa,MAAM,kHAAA,CAAA,UAAI,CAAC,aAAa;QAE3C,IAAI;YACF,MAAM,WAAW,gBAAgB;YAGjC,mBAAmB;YACnB,MAAM,WAAW,KAAK,CACpB,CAAC;;oBAEW,CAAC,EACb;gBACE,KAAK,SAAS;gBAAE,KAAK,cAAc;gBAAE,KAAK,YAAY;gBAAE,KAAK,GAAG;gBAChE,KAAK,SAAS;aACf;YAIH,MAAM,WAAW,MAAM;YAEvB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,SAAS;YAA+B,GAC1C;gBAAE,QAAQ;YAAI;QAGlB,EAAE,OAAO,OAAO;YACd,MAAM,WAAW,QAAQ;YACzB,MAAM;QACR,SAAU;YACR,WAAW,OAAO;QACpB;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}