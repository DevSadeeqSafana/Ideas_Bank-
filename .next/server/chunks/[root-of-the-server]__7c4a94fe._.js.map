{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/ideas_bank/src/lib/db.js"],"sourcesContent":["import mysql from 'mysql2/promise';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst pool = mysql.createPool({\n  host: process.env.DB_HOST || '127.0.0.1',\n  user: process.env.DB_USER || 'exam_user',\n  password: process.env.DB_PASSWORD || 'exam_password',\n  port: parseInt(process.env.DB_PORT, 10) || 3307,\n  database: process.env.DB_NAME || 'ideas_bank',\n  waitForConnections: true,\n  connectionLimit: 10,\n  queueLimit: 0\n});\n\n(async () => {\n  try {\n    const connection = await pool.getConnection();\n    console.log(`✅ Connected to ${process.env.DB_NAME || 'ideas_bank'} database`);\n    connection.release();\n  } catch (err) {\n    console.error('❌ Database connection failed:', err.message);\n  }\n})();\n\nexport default pool;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,uIAAA,CAAA,UAAM,CAAC,MAAM;AAEb,MAAM,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;IAC5B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,UAAU,QAAQ,GAAG,CAAC,WAAW,IAAI;IACrC,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO,EAAE,OAAO;IAC3C,UAAU,QAAQ,GAAG,CAAC,OAAO,IAAI;IACjC,oBAAoB;IACpB,iBAAiB;IACjB,YAAY;AACd;AAEA,CAAC;IACC,IAAI;QACF,MAAM,aAAa,MAAM,KAAK,aAAa;QAC3C,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,QAAQ,GAAG,CAAC,OAAO,IAAI,aAAa,SAAS,CAAC;QAC5E,WAAW,OAAO;IACpB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,iCAAiC,IAAI,OAAO;IAC5D;AACF,CAAC;uCAEc","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/ideas_bank/src/schema/auth.js"],"sourcesContent":["import { z } from 'zod';\n\nexport const registerSchema = z.object({\n  firstName: z.string().min(2, 'First name must be at least 2 characters'),\n  lastName: z.string().min(2, 'Last name must be at least 2 characters'),\n  registrationno: z.string().min(2, 'Invalid Trainee ID'),\n  userType: z.enum(['APPLICANT', 'ADMIN'])\n});\n\nexport const loginSchema = z.object({\n  registrationno: z.string().min(2,'Invalid Trainee ID'),  \n});"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,iBAAiB,+KAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,WAAW,+KAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC7B,UAAU,+KAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAC5B,gBAAgB,+KAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;IAClC,UAAU,+KAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAa;KAAQ;AACzC;AAEO,MAAM,cAAc,+KAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClC,gBAAgB,+KAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAE;AACnC","debugId":null}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/ideas_bank/src/lib/cryptoUtil.js"],"sourcesContent":["\nexport function encrypt(text) {\n  return Buffer.from(String(text).toString(), 'utf8').toString('base64');\n}\n\nexport function decrypt(encodedText) {\n  return Buffer.from(encodedText, 'base64').toString('utf8');\n}"],"names":[],"mappings":";;;;AACO,SAAS,QAAQ,IAAI;IAC1B,OAAO,OAAO,IAAI,CAAC,OAAO,MAAM,QAAQ,IAAI,QAAQ,QAAQ,CAAC;AAC/D;AAEO,SAAS,QAAQ,WAAW;IACjC,OAAO,OAAO,IAAI,CAAC,aAAa,UAAU,QAAQ,CAAC;AACrD","debugId":null}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/ideas_bank/src/app/api/auth/route.js"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport pool from \"@/lib/db\";\nimport { loginSchema } from \"@/schema/auth\";\nimport { encrypt } from \"@/lib/cryptoUtil\";\n\nexport async function POST(request) {\n  try {\n    const requestData = await request.json();\n    const validatedData = loginSchema.safeParse(requestData);\n    console.log(\"Login Request:\", requestData);\n\n    if (!validatedData.success) {\n      console.error(\"Validation errors:\", validatedData.error.errors);\n      return NextResponse.json(\n        { error: \"Validation failed\", details: validatedData.error.errors },\n        { status: 400 }\n      );\n    }\n\n    const { registrationno } = validatedData.data;\n\n    const [users] = await pool.query(\n      \"SELECT * FROM trainees WHERE registrationno = ?\",\n      [registrationno]\n    );\n\n    if (users.length === 0) {\n      return NextResponse.json({ error: \"Invalid credentials\" }, { status: 401 });\n    }\n\n    const user = users[0];\n    console.log(\"User data from DB:\", user);\n    \n    // Check different possible field names for the ID\n    const userId = user.SN || user.sn || user.id || user.trainee_sn;\n    \n    if (!userId) {\n      console.error(\"No ID field found in user data:\", Object.keys(user));\n    }\n\n    return NextResponse.json({\n      traineeId: userId ? encrypt(String(userId)) : null,\n      FullName: user.FullName || user.fullname,\n      info: user,\n    });\n  } catch (error) {\n    console.error(\"Login error:\", error);\n    return NextResponse.json({ error: \"Internal server error\" }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;;;;;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,cAAc,MAAM,QAAQ,IAAI;QACtC,MAAM,gBAAgB,uHAAA,CAAA,cAAW,CAAC,SAAS,CAAC;QAC5C,QAAQ,GAAG,CAAC,kBAAkB;QAE9B,IAAI,CAAC,cAAc,OAAO,EAAE;YAC1B,QAAQ,KAAK,CAAC,sBAAsB,cAAc,KAAK,CAAC,MAAM;YAC9D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;gBAAqB,SAAS,cAAc,KAAK,CAAC,MAAM;YAAC,GAClE;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,EAAE,cAAc,EAAE,GAAG,cAAc,IAAI;QAE7C,MAAM,CAAC,MAAM,GAAG,MAAM,kHAAA,CAAA,UAAI,CAAC,KAAK,CAC9B,mDACA;YAAC;SAAe;QAGlB,IAAI,MAAM,MAAM,KAAK,GAAG;YACtB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAsB,GAAG;gBAAE,QAAQ;YAAI;QAC3E;QAEA,MAAM,OAAO,KAAK,CAAC,EAAE;QACrB,QAAQ,GAAG,CAAC,sBAAsB;QAElC,kDAAkD;QAClD,MAAM,SAAS,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,UAAU;QAE/D,IAAI,CAAC,QAAQ;YACX,QAAQ,KAAK,CAAC,mCAAmC,OAAO,IAAI,CAAC;QAC/D;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,WAAW,SAAS,CAAA,GAAA,0HAAA,CAAA,UAAO,AAAD,EAAE,OAAO,WAAW;YAC9C,UAAU,KAAK,QAAQ,IAAI,KAAK,QAAQ;YACxC,MAAM;QACR;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gBAAgB;QAC9B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}