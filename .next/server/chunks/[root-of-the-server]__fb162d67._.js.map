{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/ideas_bank/src/lib/db.js"],"sourcesContent":["import mysql from 'mysql2/promise';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nconst pool = mysql.createPool({\n  host: process.env.DB_HOST || '127.0.0.1',\n  user: process.env.DB_USER || 'exam_user',\n  password: process.env.DB_PASSWORD || 'exam_password',\n  port: parseInt(process.env.DB_PORT, 10) || 3307,\n  database: process.env.DB_NAME || 'ideas_bank',\n  waitForConnections: true,\n  connectionLimit: 10,\n  queueLimit: 0\n});\n\n(async () => {\n  try {\n    const connection = await pool.getConnection();\n    console.log(`✅ Connected to ${process.env.DB_NAME || 'ideas_bank'} database`);\n    connection.release();\n  } catch (err) {\n    console.error('❌ Database connection failed:', err.message);\n  }\n})();\n\nexport default pool;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,uIAAA,CAAA,UAAM,CAAC,MAAM;AAEb,MAAM,OAAO,mIAAA,CAAA,UAAK,CAAC,UAAU,CAAC;IAC5B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,MAAM,QAAQ,GAAG,CAAC,OAAO,IAAI;IAC7B,UAAU,QAAQ,GAAG,CAAC,WAAW,IAAI;IACrC,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO,EAAE,OAAO;IAC3C,UAAU,QAAQ,GAAG,CAAC,OAAO,IAAI;IACjC,oBAAoB;IACpB,iBAAiB;IACjB,YAAY;AACd;AAEA,CAAC;IACC,IAAI;QACF,MAAM,aAAa,MAAM,KAAK,aAAa;QAC3C,QAAQ,GAAG,CAAC,CAAC,eAAe,EAAE,QAAQ,GAAG,CAAC,OAAO,IAAI,aAAa,SAAS,CAAC;QAC5E,WAAW,OAAO;IACpB,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,iCAAiC,IAAI,OAAO;IAC5D;AACF,CAAC;uCAEc","debugId":null}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/ideas_bank/src/app/api/bank/route.js"],"sourcesContent":["import { NextResponse } from 'next/server';\r\nimport pool from '@/lib/db';\r\n\r\nexport async function POST(request) {\r\n  try {\r\n    const data = await request.json();\r\n\r\n    const { bank_name, account_number, account_name, bvn, traineeId } = data;\r\n\r\n    if (!traineeId) {\r\n      return NextResponse.json({ error: 'Trainee ID is required' }, { status: 400 });\r\n    }\r\n\r\n    console.log('Bank data received:', { bank_name, account_number, account_name, bvn, traineeId });\r\n\r\n    // Update bank details in the trainees table\r\n    const result = await pool.query(\r\n      `UPDATE trainees SET \r\n       bank_name = ?, account_number = ?, account_name = ?, bvn = ?\r\n       WHERE id = ?`,\r\n      [bank_name, account_number, account_name, bvn, traineeId]\r\n    );\r\n\r\n    console.log('Update result:', result);\r\n\r\n    if (result[0].affectedRows === 0) {\r\n      return NextResponse.json({ error: 'Trainee not found' }, { status: 404 });\r\n    }\r\n\r\n    return NextResponse.json({ message: 'Bank details updated successfully' }, { status: 200 });\r\n\r\n  } catch (error) {\r\n    console.error('Update bank error:', error);\r\n    return NextResponse.json({ error: 'Internal server error' }, { status: 500 });\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAO;IAChC,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,MAAM,EAAE,SAAS,EAAE,cAAc,EAAE,YAAY,EAAE,GAAG,EAAE,SAAS,EAAE,GAAG;QAEpE,IAAI,CAAC,WAAW;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAyB,GAAG;gBAAE,QAAQ;YAAI;QAC9E;QAEA,QAAQ,GAAG,CAAC,uBAAuB;YAAE;YAAW;YAAgB;YAAc;YAAK;QAAU;QAE7F,4CAA4C;QAC5C,MAAM,SAAS,MAAM,kHAAA,CAAA,UAAI,CAAC,KAAK,CAC7B,CAAC;;mBAEY,CAAC,EACd;YAAC;YAAW;YAAgB;YAAc;YAAK;SAAU;QAG3D,QAAQ,GAAG,CAAC,kBAAkB;QAE9B,IAAI,MAAM,CAAC,EAAE,CAAC,YAAY,KAAK,GAAG;YAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QACzE;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAoC,GAAG;YAAE,QAAQ;QAAI;IAE3F,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}