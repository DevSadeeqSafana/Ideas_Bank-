{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/ideas_bank/src/providers/QueryProvider.js"],"sourcesContent":["\"use client\";\n\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { useState } from 'react';\n\nconst createQueryClient = () => new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 1000 * 60 * 5, // 5 minutes\n      gcTime: 1000 * 60 * 10, // 10 minutes (renamed from cacheTime)\n      refetchOnWindowFocus: false,\n      retry: false,\n    },\n  },\n});\n\nlet browserQueryClient = undefined;\n\nconst getQueryClient = () => {\n  if (typeof window === 'undefined') {\n    return createQueryClient();\n  }\n\n  if (!browserQueryClient) {\n    browserQueryClient = createQueryClient();\n  }\n\n  return browserQueryClient;\n};\n\nexport default function QueryProvider({ children }) {\n  const [queryClient] = useState(() => getQueryClient());\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n    </QueryClientProvider>\n  );\n}"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;;;AAHA;;;AAKA,MAAM,oBAAoB,IAAM,IAAI,gLAAA,CAAA,cAAW,CAAC;QAC9C,gBAAgB;YACd,SAAS;gBACP,WAAW,OAAO,KAAK;gBACvB,QAAQ,OAAO,KAAK;gBACpB,sBAAsB;gBACtB,OAAO;YACT;QACF;IACF;AAEA,IAAI,qBAAqB;AAEzB,MAAM,iBAAiB;IACrB;;IAIA,IAAI,CAAC,oBAAoB;QACvB,qBAAqB;IACvB;IAEA,OAAO;AACT;AAEe,SAAS,cAAc,KAAY;QAAZ,EAAE,QAAQ,EAAE,GAAZ;;IACpC,MAAM,CAAC,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD;kCAAE,IAAM;;IAErC,qBACE,6LAAC,yLAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAC1B;;;;;;AAGP;GARwB;KAAA","debugId":null}}]
}