{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/ideas_bank/src/lib/cryptoUtil.js"],"sourcesContent":["\nexport function encrypt(text) {\n  return Buffer.from(String(text).toString(), 'utf8').toString('base64');\n}\n\nexport function decrypt(encodedText) {\n  return Buffer.from(encodedText, 'base64').toString('utf8');\n}"],"names":[],"mappings":";;;;AAES;AADF,SAAS,QAAQ,IAAI;IAC1B,OAAO,8JAAA,CAAA,SAAM,CAAC,IAAI,CAAC,OAAO,MAAM,QAAQ,IAAI,QAAQ,QAAQ,CAAC;AAC/D;AAEO,SAAS,QAAQ,WAAW;IACjC,OAAO,8JAAA,CAAA,SAAM,CAAC,IAAI,CAAC,aAAa,UAAU,QAAQ,CAAC;AACrD","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/ideas_bank/src/lib/traineeUtils.js"],"sourcesContent":["import { decrypt } from './cryptoUtil';\n\n/**\n * Standardized utility functions for trainee ID handling\n * Addresses inconsistent field mapping across the application\n */\n\n/**\n * Extract trainee ID from various possible field names\n * @param {Object} data - Object that might contain trainee ID in various field names\n * @returns {string|number|null} - Trainee ID or null if not found\n */\nexport function extractTraineeId(data) {\n  if (!data || typeof data !== 'object') {\n    return null;\n  }\n\n  // Try different possible field names in order of preference\n  const possibleFields = [\n    'traineeId',  // Our standardized field name\n    'id',         // Most common\n    'ID',         // Sometimes uppercase\n    'SN',         // Serial Number from database\n    'sn',         // Lowercase version\n    'trainee_sn', // Alternative database field\n    'trainee_id', // Alternative field name\n  ];\n\n  for (const field of possibleFields) {\n    if (data[field] != null && data[field] !== '') {\n      return data[field];\n    }\n  }\n\n  return null;\n}\n\n/**\n * Get trainee ID from URL search params with decryption support\n * @param {URLSearchParams} searchParams - URL search parameters\n * @param {string} paramName - Parameter name to look for (default: 'traineeId')\n * @param {boolean} encrypted - Whether the ID is encrypted (default: false)\n * @returns {string|null} - Trainee ID or null if not found\n */\nexport function getTraineeIdFromParams(searchParams, paramName = 'traineeId', encrypted = false) {\n  if (!searchParams) return null;\n\n  // Try different parameter names\n  const possibleParams = [paramName, 'id', 'traineeId'];\n  \n  for (const param of possibleParams) {\n    const value = searchParams.get(param);\n    if (value) {\n      try {\n        return encrypted ? decrypt(value) : value;\n      } catch (error) {\n        console.error(`Error decrypting trainee ID from param ${param}:`, error);\n        // If decryption fails, try returning the raw value\n        return value;\n      }\n    }\n  }\n\n  return null;\n}\n\n/**\n * Get trainee ID from localStorage with fallback options\n * @returns {string|null} - Trainee ID or null if not found\n */\nexport function getTraineeIdFromStorage() {\n  if (typeof window === 'undefined') return null;\n\n  try {\n    // First try the dedicated traineeId storage\n    const directId = localStorage.getItem('traineeId');\n    if (directId) return directId;\n\n    // Fallback to extracting from stored data\n    const storedData = localStorage.getItem('data');\n    if (storedData) {\n      const parsed = JSON.parse(storedData);\n      return extractTraineeId(parsed);\n    }\n  } catch (error) {\n    console.error('Error reading trainee ID from localStorage:', error);\n  }\n\n  return null;\n}\n\n/**\n * Store trainee ID in localStorage with standardized key\n * @param {string|number} traineeId - Trainee ID to store\n * @param {Object} additionalData - Additional data to store alongside ID\n */\nexport function storeTraineeId(traineeId, additionalData = null) {\n  if (typeof window === 'undefined') return;\n\n  try {\n    if (traineeId != null && traineeId !== '') {\n      localStorage.setItem('traineeId', String(traineeId));\n      \n      if (additionalData) {\n        const existingData = localStorage.getItem('data');\n        const dataToStore = existingData ? \n          { ...JSON.parse(existingData), ...additionalData, traineeId } :\n          { ...additionalData, traineeId };\n        \n        localStorage.setItem('data', JSON.stringify(dataToStore));\n      }\n    }\n  } catch (error) {\n    console.error('Error storing trainee ID:', error);\n  }\n}\n\n/**\n * Validate trainee ID format\n * @param {any} traineeId - ID to validate\n * @returns {boolean} - Whether the ID is valid\n */\nexport function isValidTraineeId(traineeId) {\n  if (traineeId == null || traineeId === '') {\n    return false;\n  }\n\n  const stringId = String(traineeId).trim();\n  \n  // Check if it's a valid number or non-empty string\n  return stringId.length > 0 && !isNaN(Number(stringId));\n}\n\n/**\n * Normalize trainee ID to a consistent format\n * @param {any} traineeId - ID to normalize\n * @returns {number|null} - Normalized ID as number or null if invalid\n */\nexport function normalizeTraineeId(traineeId) {\n  if (!isValidTraineeId(traineeId)) {\n    return null;\n  }\n\n  const numericId = Number(traineeId);\n  return isNaN(numericId) ? null : numericId;\n}\n\n/**\n * Build trainee data object with consistent field mapping\n * @param {Object} rawData - Raw data from API or storage\n * @returns {Object} - Normalized trainee data\n */\nexport function normalizeTraineeData(rawData) {\n  if (!rawData || typeof rawData !== 'object') {\n    return {};\n  }\n\n  const traineeId = extractTraineeId(rawData);\n  \n  return {\n    ...rawData,\n    traineeId: normalizeTraineeId(traineeId),\n    // Ensure consistent field names\n    fullname: rawData.fullname || rawData.FullName || rawData.full_name,\n    registrationno: rawData.registrationno || rawData.registrationNo || rawData.registration_no,\n  };\n}"],"names":[],"mappings":";;;;;;;;;AAAA;;AAYO,SAAS,iBAAiB,IAAI;IACnC,IAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;QACrC,OAAO;IACT;IAEA,4DAA4D;IAC5D,MAAM,iBAAiB;QACrB;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,KAAK,MAAM,SAAS,eAAgB;QAClC,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,IAAI,CAAC,MAAM,KAAK,IAAI;YAC7C,OAAO,IAAI,CAAC,MAAM;QACpB;IACF;IAEA,OAAO;AACT;AASO,SAAS,uBAAuB,YAAY;QAAE,YAAA,iEAAY,aAAa,YAAA,iEAAY;IACxF,IAAI,CAAC,cAAc,OAAO;IAE1B,gCAAgC;IAChC,MAAM,iBAAiB;QAAC;QAAW;QAAM;KAAY;IAErD,KAAK,MAAM,SAAS,eAAgB;QAClC,MAAM,QAAQ,aAAa,GAAG,CAAC;QAC/B,IAAI,OAAO;YACT,IAAI;gBACF,OAAO,YAAY,CAAA,GAAA,2HAAA,CAAA,UAAO,AAAD,EAAE,SAAS;YACtC,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,AAAC,0CAA+C,OAAN,OAAM,MAAI;gBAClE,mDAAmD;gBACnD,OAAO;YACT;QACF;IACF;IAEA,OAAO;AACT;AAMO,SAAS;IACd;;IAEA,IAAI;QACF,4CAA4C;QAC5C,MAAM,WAAW,aAAa,OAAO,CAAC;QACtC,IAAI,UAAU,OAAO;QAErB,0CAA0C;QAC1C,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,IAAI,YAAY;YACd,MAAM,SAAS,KAAK,KAAK,CAAC;YAC1B,OAAO,iBAAiB;QAC1B;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+CAA+C;IAC/D;IAEA,OAAO;AACT;AAOO,SAAS,eAAe,SAAS;QAAE,iBAAA,iEAAiB;IACzD;;IAEA,IAAI;QACF,IAAI,aAAa,QAAQ,cAAc,IAAI;YACzC,aAAa,OAAO,CAAC,aAAa,OAAO;YAEzC,IAAI,gBAAgB;gBAClB,MAAM,eAAe,aAAa,OAAO,CAAC;gBAC1C,MAAM,cAAc,eAClB;oBAAE,GAAG,KAAK,KAAK,CAAC,aAAa;oBAAE,GAAG,cAAc;oBAAE;gBAAU,IAC5D;oBAAE,GAAG,cAAc;oBAAE;gBAAU;gBAEjC,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;YAC9C;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,6BAA6B;IAC7C;AACF;AAOO,SAAS,iBAAiB,SAAS;IACxC,IAAI,aAAa,QAAQ,cAAc,IAAI;QACzC,OAAO;IACT;IAEA,MAAM,WAAW,OAAO,WAAW,IAAI;IAEvC,mDAAmD;IACnD,OAAO,SAAS,MAAM,GAAG,KAAK,CAAC,MAAM,OAAO;AAC9C;AAOO,SAAS,mBAAmB,SAAS;IAC1C,IAAI,CAAC,iBAAiB,YAAY;QAChC,OAAO;IACT;IAEA,MAAM,YAAY,OAAO;IACzB,OAAO,MAAM,aAAa,OAAO;AACnC;AAOO,SAAS,qBAAqB,OAAO;IAC1C,IAAI,CAAC,WAAW,OAAO,YAAY,UAAU;QAC3C,OAAO,CAAC;IACV;IAEA,MAAM,YAAY,iBAAiB;IAEnC,OAAO;QACL,GAAG,OAAO;QACV,WAAW,mBAAmB;QAC9B,gCAAgC;QAChC,UAAU,QAAQ,QAAQ,IAAI,QAAQ,QAAQ,IAAI,QAAQ,SAAS;QACnE,gBAAgB,QAAQ,cAAc,IAAI,QAAQ,cAAc,IAAI,QAAQ,eAAe;IAC7F;AACF","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/ideas_bank/src/hooks/useUserInfo.js"],"sourcesContent":["\"use client\";\n\nimport { useMutation, useQuery, useQueryClient } from '@tanstack/react-query';\nimport { useCallback } from 'react';\nimport { \n  getTraineeIdFromStorage, \n  storeTraineeId, \n  normalizeTraineeData,\n  extractTraineeId,\n  isValidTraineeId \n} from '@/lib/traineeUtils';\n\nconst USER_INFO_KEY = 'userInfo';\n\n// Helper function to get initial data from localStorage\nconst getInitialUserData = () => {\n  if (typeof window === 'undefined') return null;\n  \n  try {\n    const data = localStorage.getItem('data');\n    const traineeId = getTraineeIdFromStorage();\n    \n    if (data) {\n      const parsed = JSON.parse(data);\n      const normalizedData = normalizeTraineeData({\n        ...parsed,\n        traineeId: traineeId || extractTraineeId(parsed)\n      });\n      return normalizedData;\n    }\n  } catch (error) {\n    console.error('Error reading from localStorage:', error);\n  }\n  \n  return null;\n};\n\n// Helper function to sync with localStorage\nconst syncWithLocalStorage = (data) => {\n  if (typeof window === 'undefined') return;\n  \n  try {\n    if (data) {\n      const normalizedData = normalizeTraineeData(data);\n      localStorage.setItem('data', JSON.stringify(normalizedData));\n      \n      const traineeId = extractTraineeId(normalizedData);\n      if (isValidTraineeId(traineeId)) {\n        storeTraineeId(traineeId);\n      }\n    } else {\n      localStorage.removeItem('data');\n      localStorage.removeItem('traineeId');\n    }\n  } catch (error) {\n    console.error('Error syncing with localStorage:', error);\n  }\n};\n\nexport const useUserInfo = () => {\n  const queryClient = useQueryClient();\n\n  // Query to get user info\n  const query = useQuery({\n    queryKey: [USER_INFO_KEY],\n    queryFn: () => getInitialUserData(),\n    staleTime: Infinity, // Never stale unless manually invalidated\n    gcTime: 1000 * 60 * 60 * 24, // 24 hours (renamed from cacheTime)\n  });\n\n  // Mutation to update user info\n  const updateMutation = useMutation({\n    mutationFn: (newData) => {\n      const currentData = queryClient.getQueryData([USER_INFO_KEY]) || {};\n      const updatedData = { ...currentData, ...newData };\n      syncWithLocalStorage(updatedData);\n      return updatedData;\n    },\n    onSuccess: (updatedData) => {\n      queryClient.setQueryData([USER_INFO_KEY], updatedData);\n    },\n  });\n\n  // Mutation to clear user info\n  const clearMutation = useMutation({\n    mutationFn: () => {\n      syncWithLocalStorage(null);\n      return null;\n    },\n    onSuccess: () => {\n      queryClient.setQueryData([USER_INFO_KEY], null);\n    },\n  });\n\n  return {\n    // Data\n    userInfo: query.data,\n    isLoading: query.isLoading,\n    error: query.error,\n    \n    // Actions\n    updateUserInfo: (data) => updateMutation.mutate(data),\n    clearUserInfo: () => clearMutation.mutate(),\n    \n    // Mutation states\n    isUpdating: updateMutation.isPending,\n    updateError: updateMutation.error,\n    \n    // Utilities\n    getTraineeId: useCallback(() => {\n      const data = query.data;\n      return extractTraineeId(data);\n    }, [query.data]),\n    \n    // Refresh from localStorage (useful if data was updated externally)\n    refresh: useCallback(() => queryClient.invalidateQueries({ queryKey: [USER_INFO_KEY] }), [queryClient]),\n    \n    // Check if user has any data stored\n    hasUserData: useCallback(() => !!query.data, [query.data]),\n  };\n};\n\n// Hook for specific form data management\nexport const useFormData = (formType) => {\n  const { userInfo, updateUserInfo, isUpdating } = useUserInfo();\n  \n  const getFormData = () => {\n    if (!userInfo) return {};\n    \n    switch (formType) {\n      case 'personal':\n        return {\n          fullname: userInfo.fullname || '',\n          registrationno: userInfo.registrationno || '',\n          email: userInfo.email || '',\n          phone: userInfo.phone || '',\n          gender: userInfo.gender || '',\n          traineeId: extractTraineeId(userInfo),\n        };\n      \n      case 'bank':\n        return {\n          bank_name: userInfo.bank_name || '',\n          account_number: userInfo.account_number || '',\n          account_name: userInfo.account_name || '',\n          bvn: userInfo.bvn || '',\n          traineeId: extractTraineeId(userInfo),\n        };\n      \n      case 'internship':\n        return {\n          has_started_internship: userInfo.has_started_internship || false,\n          internship_letter_url: userInfo.internship_letter_url || '',\n          has_completed_internship: userInfo.has_completed_internship || false,\n          completion_letter_url: userInfo.completion_letter_url || '',\n          state_of_internship: userInfo.state_of_internship || '',\n          LGA_of_internship: userInfo.LGA_of_internship || '',\n        };\n      \n      default:\n        return userInfo || {};\n    }\n  };\n  \n  const updateFormData = (formData) => {\n    updateUserInfo(formData);\n  };\n  \n  return {\n    formData: getFormData(),\n    updateFormData,\n    isUpdating,\n  };\n};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":["file:///C:/Projects/ideas_bank/src/app/page.js"],"sourcesContent":["\"use client\";\nimport { motion } from 'framer-motion';\nimport Link from 'next/link';\nimport { useEffect } from 'react';\nimport { useUserInfo } from '@/hooks/useUserInfo';\n\nexport default function WelcomePage() {\n  const { clearUserInfo } = useUserInfo();\n\n  useEffect(() => {\n    // Clear all user data and traineeId from localStorage when landing on home page\n    clearUserInfo();\n    \n    // Also directly clear localStorage items to ensure complete reset\n    if (typeof window !== 'undefined') {\n      localStorage.removeItem('data');\n      localStorage.removeItem('traineeId');\n    }\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-200 via-pink-100 to-blue-200 flex items-center justify-center p-6 font-inter\">\n      <motion.div\n        initial={{ opacity: 0, y: -30 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.8 }}\n        className=\"backdrop-blur-lg bg-white/30 border border-white/40 shadow-xl rounded-3xl p-10 max-w-md w-full text-center\"\n      >\n        <div className=\"w-32 h-32 mx-auto mb-6 overflow-hidden rounded-full shadow-lg border-4 border-white/30\">\n          <img src=\"/ideas-logo.jpg\" alt=\"Logo\" className=\"object-cover w-full h-full\" />\n        </div>\n\n        <h1 className=\"text-4xl font-semibold text-gray-800 mb-4 drop-shadow-sm\">\n          Welcome, Trainee!\n        </h1>\n\n        <p className=\"text-lg text-gray-700 mb-8\">\n          We’re excited to have you back. Please complete your bank information registration.\n        </p>\n\n        <Link href=\"/login\">\n          <motion.button\n            whileHover={{ scale: 1.05 }}\n            whileTap={{ scale: 0.95 }}\n            className=\"px-8 py-3 rounded-xl bg-gradient-to-r from-blue-300 to-indigo-300 text-white font-medium shadow-md hover:from-blue-700 hover:to-indigo-700 transition-all\"\n          >\n            Click to Continue\n          </motion.button>\n        </Link>\n      </motion.div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;;;AAJA;;;;;AAMe,SAAS;;IACtB,MAAM,EAAE,aAAa,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,cAAW,AAAD;IAEpC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACR,gFAAgF;YAChF;YAEA,kEAAkE;YAClE,wCAAmC;gBACjC,aAAa,UAAU,CAAC;gBACxB,aAAa,UAAU,CAAC;YAC1B;QACF;gCAAG,EAAE;IAEL,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;YACT,SAAS;gBAAE,SAAS;gBAAG,GAAG,CAAC;YAAG;YAC9B,SAAS;gBAAE,SAAS;gBAAG,GAAG;YAAE;YAC5B,YAAY;gBAAE,UAAU;YAAI;YAC5B,WAAU;;8BAEV,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,KAAI;wBAAkB,KAAI;wBAAO,WAAU;;;;;;;;;;;8BAGlD,6LAAC;oBAAG,WAAU;8BAA2D;;;;;;8BAIzE,6LAAC;oBAAE,WAAU;8BAA6B;;;;;;8BAI1C,6LAAC,+JAAA,CAAA,UAAI;oBAAC,MAAK;8BACT,cAAA,6LAAC,6LAAA,CAAA,SAAM,CAAC,MAAM;wBACZ,YAAY;4BAAE,OAAO;wBAAK;wBAC1B,UAAU;4BAAE,OAAO;wBAAK;wBACxB,WAAU;kCACX;;;;;;;;;;;;;;;;;;;;;;AAOX;GA9CwB;;QACI,8HAAA,CAAA,cAAW;;;KADf","debugId":null}}]
}